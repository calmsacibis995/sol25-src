#
#ident	"@(#)Makefile.targ	1.2	94/12/10 SMI"
#
# Copyright (c) 1994, by Sun Microsystems, Inc.
# All rights reserved.
#
# psm/stand/bootblks/obp-c/Makefile.targ
#

#
# Targets for the C-only bootblock
#
.PARALLEL: $(OBP_SRT) $(OBP_OBJS) $(OBP_L_OBJS)

$(PROG).elf: $(OBP_SRT) $(OBP_OBJS) $(MAPFILE)
	$(LD) $(LDFLAGS) -o $@ $(OBP_SRT) $(OBP_OBJS) $(LDLIBS)

$(MKBOOT): $(OBPSRCDIR)/$$(@).c
	$(NATIVECC) -o $@ $(OBPSRCDIR)/$@.c

$(PROG): $(MKBOOT) $(PROG).elf
	-./$(MKBOOT) $@.elf $@; chmod -x $@

bbvers.c: $(MKVERS)
	@-$(RM) $@
	./$(MKVERS) ${SMALL_DEV_CM} ${ECHO} $(PROG) $@

clean:
	-$(RM) $(OBP_SRT) $(OBP_OBJS)
	-$(RM) $(OBP_L_OBJS)
	-$(RM) bbvers.c a.out core

clobber: clean
	-$(RM) $(PROG) $(PROG).elf bootblk.version
	-$(RM) $(MKVERS) $(MKBOOT)

lint: $(OBP_L_OBJS)
	@echo "Global Cross-checks:"
	$(LINT.2) $(OBP_L_OBJS) $(LDLIBS)

#
# The cscope.out file is made in the current directory
#
# Things to note:
#	1. We use relative names for cscope and tags.
#	2. We *don't* remove the old cscope.out file, because cscope is
#	   smart enough to only build what has changed.  It can be
#	   confused, however, if files are renamed or removed, so it may
#	   be necessary to manually remove cscope.out if a lot of
#	   reorganization has occured.
#	3. We deliberately avoid names that include '.del' in their names
#	   as these are usually files that have been 'deleted' by nsefile.
#
CSDIR   = $(TOPDIR)
CSDIRS  = head stand/sys psm/stand/sys uts/common/sys uts/sun/sys uts/sparc/sys
CSPATHS = $(CSDIRS:%=$(CSDIR)/%)

CSINCS	= $(CSPATHS:%=-I%) \
	  -I$(ROOT)/usr/include \
	  $(ENVCPPFLAGS1) $(ENVCPPFLAGS2) $(ENVCPPFLAGS3) $(ENVCPPFLAGS4)

CSCOPE	= cscope
CTAGS	= ctags

cscope.out: cscope.files FRC
	${CSCOPE} -b -f `pwd`/$@

cscope.files:	FRC
	@$(RM) cscope.files
	echo $(CSINCS) > cscope.files
	find $(CSPATHS) -name SCCS -prune -o \
	    \( -type d -name '.del*' \) -prune -o -type f \
	    \( -name '*.[chs]' -o -name 'Makefile*' -o -name '*.il' \) \
	    -a ! -name '.del*' -print >> cscope.files
	@wc -l cscope.files

#
# Create a tags data base, similar to above.
# Since assembler files now contain C fragments for lint,
# the lint fragments will allow ctags to "work" on assembler.
#
# Things to note:
#	1. We put plain files before headers, and .c before .s (because
#	   ctags doesn't understand assembly comments).
#	2. We *don't* sort the output of find, as we want functions in
#	   architecture directories to take precedence over those in
#	   sun, and those over those in common.
#
tags: cscope.files
	${CTAGS} -wt `sed 1d cscope.files`

FRC:

